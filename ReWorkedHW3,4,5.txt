//1.1 Переменная хранит в себе значение от 0 до 9. 
//Написать скрипт который будет выводить слово “один”, если переменная хранит значение 1. 
//Выводить слово “два” - если переменная хранит значение 2, и т.д. для всех цифр от 0 до 9. Реализовать двумя способами.

let digitToString = function(value){
      if (value==0) {
          console.log("ноль");
      }
      else if(value==1) {
          console.log("один");
      }
      else if(value==2) {
          console.log("два");
      }
      else if(value==3) {
          console.log("три");
      }
      else if(value==4) {
          console.log("четыре");
      }
      else if(value==5) {
          console.log("пять");
      }
      else if(value==6) {
          console.log("шесть");
      }
      else if(value==7) {
          console.log("семь");
      }
      else if(value==8) {
          console.log("восемь");
      }
      else if(value==9) {
          console.log("девять");
      }
};
digitToString(9);
////////////////////////////////////

let digitToString = function(value){ 
  let mas = ["ноль", "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"];
  console.log(mas[value]);
};
digitToString(0);



//1.2 Переменная хранит в себе значение, 
//напишите скрипт которое выводит информацию о том, 
//что число является нулевым либо положительным либо отрицательным.

let numberCheck = function(value){
  if (value == 0) {
      console.log("число = 0")
  }
  else if (value > 0) {
      console.log("число больше 0")
  }
  else if (value < 0) {
      console.log("число меньше 0")
  }
}
numberCheck(-8);



//1.3 перевод различных значений в байты 
let unitConverter = function(value, unit){ // unit = str, only "byte", "kb", "mb", "gb"
    let result = value;
    if (unit === "byte"){
      result = value;
      console.log(result);
    }
    else if(unit === "kb"){
      result*=1024
      console.log(result);
    }
    else if(unit === "mb"){
      result*=1024*1024
      console.log(result);
    }
    else if(unit === "gb"){
      result*=1024*1024*1024
      console.log(result);
    }
  }
 unitConverter(634, "gb");



// Задание 1.4 Про кредит
let creditInformation = function(percent, creditValue, creditTime){
    let cmpInst = Math.pow((1+percent/100), creditTime); // compound interest - сложнные проценты.
    let cmpInstResult = Math.round((cmpInst-1)*100) + " процентов от общей суммы клиент заплатит за всё время."
    console.log(cmpInstResult);
  
    let valuePY = creditValue*(1+percent/100)-creditValue + " - сумма которая начислится за первый год"; // 8 процентов заплатит клиент за один год value per year
    console.log(valuePY);
  
    let totalValue = Math.round(creditValue*cmpInst) + " - сумма которую клиент выплатит за всё время."; 
    console.log(totalValue);
  
    let bankBenefit = Math.round(creditValue*cmpInst-creditValue) + " - сумма которую клиент отдаст за кредит.";
    console.log(bankBenefit);
    };
creditInformation(8, 4000, 3);



// 2.1 Строка в обратном порядке
let reverce = function(str){
    let reverceStr = "";
    for (let i = str.length-1; i>=0 ; i--){
      reverceStr += (str[i]);
    }  
    console.log(reverceStr);
  }
  reverce("Hello");



//2.2 факториал числа
let factorial = function(value){
    let result = 1;
    for (let i = 1; i<=value; i++){
      result *= i;
    }
    console.log(result);
  }
  factorial(6);



//2.3 Дано число - вывести первые N делителей этого числа нацело.
let dividers = function(value, firstDividersQuantity){ // включая единицу.
    let breakCounter = 0;
    for (let i = 1; i<value; i++){
      if (value % i === 0){
        console.log(i);
        breakCounter++;
      }
      if (breakCounter === firstDividersQuantity){
          break;
      }
    }
  }
  dividers(50, 3);



//2.4 Найти сумму цифр числа которые кратны двум
let sumOfDigits = function(value){
    let result = 0;
    for (i = 0; i<=value; i++){
      if (i % 2 === 0){
        result += i;
      }
    }
    console.log(result);
  }
  sumOfDigits(10);  



//2.5 Найти минимальное число которое больше 300 и нацело делиться на 17
let Multiple = function(value){
    for (let i = value; true; i++){
      if (i % 17 === 0){
        console.log(i);
        break;
      }
    }
  };
Multiple(300);



//2.6 Заданы две переменные для двух целых чисел, найти максимальное общее значение которое нацело делит два заданных числа.
let greatestCommonFactor = function(firstValue, secondValue){ //greatest common factor, НОД
    if (firstValue > secondValue){
        for (j = secondValue; j>0; j--){
          if (firstValue % j === 0 && secondValue % j === 0){
            console.log(j);
            break;
        }
      }
    }
    else {
      for (j = firstValue; j>0; j--){
        if (firstValue % j === 0 && secondValue % j === 0){
          console.log(j);
          break;
        }
      }
    }
  };
  greatestCommonFactor(762, 492);



//3.1 Функции переделаны.



//3.3 Написать функцию, которая транспонирует матрицу
let MatrixTranspose = function(array, totalLength){
    let reverceArray = [];
    for (let i = 0; i<totalLength; i++){
      reverceArray.push([]);
    }
    for (let b = 0; b<totalLength; b++){
      for (let j = 0; j<totalLength; j++){
        reverceArray[j].push(array[b][j]);
      }
    }
    console.log(reverceArray);
  };
  MatrixTranspose([[1,2,3],[1,2,3],[1,2,3]], 3);



//3.4 Написать функцию, которая суммирует две матрицы
let MatrixSum = function(array, secondArray, totallength){
    for (let b = 0; b<totallength; b++){
      for (let j = 0; j<totallength; j++){
        array[b][j] += secondArray[b][j];
      }
    }
    console.log(array);
  }
  MatrixSum([[3,2,3],[6,2,6],[1,2,3]], [[3,4,3],[1,2,3],[7,2,3]], 3);



//3.5 Найти номер столбца двумерного массива сумма которого является максимальной (аналогично для строки)
let MatrixMaxStrSum = function(array, totallength){ // totallength нужен потому, что если будет двумерный массив, у которого, максимальный идекс наружных элементов 3, а внутренних - 4, и без уточнения - будет ошибка 
    let strNumber;
    let timeVariable = 0;
    for (let b = 0; b<totallength; b++){
      let sum = 0;
        for (let j = 0; j<totallength; j++){
          sum += array[b][j];
          if (timeVariable < sum){
            timeVariable = sum;
            strNumber = b;
        }
      }
    }
    console.log(strNumber);
  }
  MatrixMaxStrSum([[8,8,8],[7,9,9],[33,2,3]], 3);
/////////////////////////////////////////////////////
  let MatrixMaxColumnSum = function(array, totallength){
    let columnNumber;
    let timeVariable = 0;
    for (let b = 0; b<totallength; b++){
      let sum = 0;
        for (let j = 0; j<totallength; j++){
          sum += array[j][b];
          if (timeVariable < sum){
            timeVariable = sum;
            columnNumber = b;
        }
      }
    }
    console.log(columnNumber);
  }
  MatrixMaxColumnSum([[8,3,8],[7,9,9],[3,2,7]], 3);



//3.6 Удалить из массива все столбцы которые не имеют ни одного нулевого элемента и сумма которых положительна - оформить в виде функции
let MatrixDeleteColumn = function(array, totallength){
    let breakCounter = 0;
    for (let b = 0; b<totallength;){
      let sum = 0;
      let zeroPresence = false;
      let deleteFactor = false;
        for (let j = 0; j<totallength; j++){
          sum += array[j][b];
          console.log(sum);
          if (array[j][b] === 0){
              zeroPresence = true;
          }
          if ( j === totallength-1 ){
              if ((sum > 0 && zeroPresence === false)){
                  deleteFactor = true;
              }
          }
        }
        if (deleteFactor === true){
            for (let c = 0; c<totallength; c++){
                array[c].splice(b, 1); 
            }
            breakCounter+=1;
        }
        else if(deleteFactor === false){
            b++;
            breakCounter+=1;
        }
        if (breakCounter === totallength){
            break;
        }
    }
    console.log(array);
};
MatrixDeleteColumn([[-5,3,8],[7,9,5],[3,2,0]], 3);



/*4.1 Написать функцию которая генерирует массив случайных значений, таким образом что все элементы результирующего массива являются уникальными. 
Генерациями происходит в рамках чисел от N до M, где N,M - могут быть как положительные так и отрицательными, 
и еще одним параметром количество значений которые нужно сгенерировать. 
Если количество генерируемых значений больше чем чисел в диапазоне - отдавать пустой массив.
*/
let ArrayRandomValueGeneration = function(minValue, maxValue, arraylength){
let array = [],
    min = Math.abs(minValue),
    max = Math.abs(maxValue);
  if (arraylength > min + max){
    console.log(array);
  }
  else {
    for (i = minValue, j=0; j<arraylength; j++, minValue++){
      if (minValue < maxValue){
      array.push(minValue);
      }
    }
  let currentIndex = array.length, 
      tValue, 
      randomIndex;
    for (; 0 !== currentIndex; ){
      randomIndex = Math.floor(Math.random() * currentIndex);
      --currentIndex;

      tValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = tValue;
    }
  console.log(array);
  }
}
ArrayRandomValueGeneration(-50, 100, 150); 



//4.2 Использовать функцию из предыдущего задания чтобы получить массив из нужного количества значений. 
//Найти процентное соотношение отрицательных, положительных и нулевых элементов массива.

let  ArrayRandomValueGeneration = function(minValue, maxValue, arrayLength){
let array = [],
    min = Math.abs(minValue),
    max = Math.abs(maxValue);
  if (arrayLength > min + max){
    console.log(array);
  }
  else {
    for (i = minValue, j=0; j<arrayLength; j++, minValue++){
      if (minValue < maxValue){
      array.push(minValue);
      }
    }
  let currentIndex = array.length, 
      tValue, 
      randomIndex;
    for (; 0 !== currentIndex; ){
      randomIndex = Math.floor(Math.random() * currentIndex);
      --currentIndex;

      tValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = tValue;
    }
  //console.log(array);
  }
  console.log(array);
  return array;
}
newArray = ArrayRandomValueGeneration(-135, 15, 150);

informationAboutArrayValues = function(array){
    let belowZeroAmount = 0,
        zeroAmount = 0,
        aboveZeroAmount = 0;
    for (i = 0; i<array.length; i++){
      if (array[i] < 0){
        belowZeroAmount += 1;
      }
      else if (array[i] === 0){
        zeroAmount += 1;
      }
      else if (array[i] > 0){
        aboveZeroAmount += 1;
      }     
    }
    belowZeroAmount = belowZeroAmount/array.length * 100;
    console.log(belowZeroAmount + "% отрицательных значений");
    
    zeroAmount = zeroAmount/array.length * 100;
    console.log(zeroAmount + "% нулевых значений");
    
    aboveZeroAmount = 100 - zeroAmount - belowZeroAmount;
    console.log(aboveZeroAmount + "% положительных значений");
}
informationAboutArrayValues(newArray);



//4.4 Задано предложение - подсчитать количество вхождений каждого слова в предложении. 
//Вывести список уникальных слов и напротив каждого слова - сколько раз встретилось

NumberOfWordsInSentence = function(sentence){
  let separatorSpace = " ";
  let resultObj = {};
  let wordArray = sentence.split(separatorSpace);
  for (let i = 0; i<wordArray.length; i++){
    let tVatiable = wordArray[i];
      if (resultObj[tVatiable] != undefined){
        ++resultObj[tVatiable];
      }
      else {
        resultObj[tVatiable] = 1;
      }
    }
    for (let key in resultObj){
      console.log(key, resultObj[key]);
    }
}
NumberOfWordsInSentence("lal lal lol lal lal on alon lal alonn on lal lal");



//4.5 Написать рекурсивную функцию которая выводит абсолютно все элементы ассоциативного массива (объекта) - любого уровня вложенности

let recursiveDisplayingDifferentObjects = function(object){
    for (let key in object){
      console.log(key, object[key]);
      if (object[key] != undefined) {
        recursiveDisplayingDifferentObjects(object[key]);
      }
    }
  };
  recursiveDisplayingDifferentObjects({
    value : 3,
    next: {
      secondValue: 5,
      secondNext: {
        thirdValue: 7,
        thirdNext: {
          forthValue: 8,
        }
      }
    }
  });



//5.1 Задан двумерный массив - объединить каждый внутренний массив с верхнем массивом - только по уникальным значениям. 

let arrayValuesUnification = function(array){
    combinedArray = [];
    for (i = 0; i < array.length; i++){
      if (array[i][0] != undefined){
        combinedArray = combinedArray.concat(array[i]);
      }
      else {
        combinedArray.push(array[i]);
      }
    }
    console.log(combinedArray);
  };
  
  arrayValuesUnification([[14,5], [2,4,6], 4, [5,67], 1, [969, 6, 7]]);



//5.2 Написать функцию которая возвращает true/false в зависимости от того - все ли уникальные значения в массиве или есть не уникальные.

checkUniquenessOfArrayValues = function(array){
    let tObject = {};
    let uniqueFactor = true;
    for (let i = 0; i<array.length; i++){
      let tVariable = array[i];
        if (tObject[tVariable] != undefined){
          ++tObject[tVariable];
        }
        else {
          tObject[tVariable] = 1;
        }
      }
      for (let key in tObject){
        if (tObject[key] > 1){
          uniqueFactor = false;
          break;
        }
      }
      console.log(uniqueFactor);
  };
checkUniquenessOfArrayValues([1,4,6,2,3,7,9]);



/*5.3 Написать функцию которая возвращает: среднюю оценку студентов в разрезе каждого курса: 
{1: 3.2, 2: 3.5, 3: 4.5, 4: 3, 5: 4.5} с учетом только тех студентов которые активны. 
Посчитать количество неактивных студентов в разрезе каждого курса и общее количество неактивных студентов.
*/
studentInformation = function(array){
  resultObject = {};
  notActiveCounter = 0;
  for (let i = 0; i<array.length; i++){
    let tVariable = array[i]; // tVariable - временная переменная.
    if (resultObject[tVariable.course] === undefined){
    resultObject[tVariable.course] = {
      studentCounter: 0,
      sumEstimate: 0,
      notActiveCounter: 0,
    };
    }
    resultObject[tVariable.course].studentCounter++;
    resultObject[tVariable.course].sumEstimate += tVariable.esimate;
    if (tVariable.active == false){
      notActiveCounter++;
      resultObject[tVariable.course].notActiveCounter++;
    }
  }
  for (let key in resultObject){
    let avgEstimate = resultObject[key].sumEstimate/resultObject[key].studentCounter;
    console.log(key + " курс имеет среднюю оценку " + avgEstimate.toFixed(1) + " и " + resultObject[key].notActiveCounter + " неактивных студентов");
  }
  console.log("общее количество неактивных студентов " + notActiveCounter);
       
}
studentInformation([{name: "Olya", course: 2, esimate: 2, active: true},
  {name: "Ivan", course: 1, esimate: 5, active: false},
  {name: "Alex", course: 3, esimate: 5, active: false},
  {name: "Kolya", course: 1, esimate: 2, active: false},
  {name: "Misha", course: 1, esimate: 5, active: false},
  {name: "Kostya", course: 4, esimate: 2, active: false},
  {name: "Masha", course: 2, esimate: 4, active: true},
  {name: "Inna", course: 3, esimate: 4, active: false},
  {name: "Olya", course: 2, esimate: 4, active: true},
  {name: "Liza", course: 3, esimate: 4, active: true},
  {name: "Katya", course: 4, esimate: 4, active: false},
  {name: "Sonya", course: 3, esimate: 4, active: true}]);












