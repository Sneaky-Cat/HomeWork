//1.1 Переменная хранит в себе значение от 0 до 9. 
Написать скрипт который будет выводить слово “один”, если переменная хранит значение 1. 
Выводить слово “два” - если переменная хранит значение 2, и т.д. для всех цифр от 0 до 9. Реализовать двумя способами.

let sum = function(){
  let sum = 0;
  for(let i = 0; i<10; i++){
      if(i==1) {
          console.log("один");
          continue;
      }
      else if(i==2) {
          console.log("два");
          continue;
      }
      else if(i==3) {
          console.log("три");
          continue;
      }
      else if(i==4) {
          console.log("четыре");
          continue;
      }
      else if(i==5) {
          console.log("пять");
          continue;
      }
      else if(i==6) {
          console.log("шесть");
          continue;
      }
      else if(i==7) {
          console.log("семь");
          continue;
      }
      else if(i==8) {
          console.log("восемь");
          continue;
      }
      else if(i==9) {
          console.log("девять");
          continue;
      }
  }
}
sum();

let sum = function(){ 
  let mas = [0, "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"];
  for(let i = 1; i<mas.length; i++){
      console.log(mas[i]);
  }
}
sum();

//1.2 Переменная хранит в себе значение, 
напишите скрипт которое выводит информацию о том, 
что число является нулевым либо положительным либо отрицательным.

let informer = function(value){
  if (value == 0) {
      console.log("число = 0")
  }
  else if (value >0) {
      console.log("число больше 0")
  }
  else if (value <0) {
      console.log("число меньше 0")
  }
}
informer(0);

//1.3 перевод различных значений в байты 
let converter = function(){
  let size = "mb";
  let value = 624;
  let res = value;
  if (size === "byte"){
    res = value;
    console.log(res);
  }
  else if(size === "kb"){
    res*=1024
    console.log(res);
  }
  else if(size === "mb"){
    res*=1024*1024
    console.log(res);
  }
  else if(size === "gb"){
    res*=1024*1024*1024
    console.log(res);
  }
}
converter();


// Задание 1.4 Про кредит
let credit = function(percent, credit_value, credit_time){
  let cmp_inst = Math.pow((1+percent/100), credit_time); // compound interest - сложнные проценты.
  cmp_res = Math.round((cmp_inst-1)*100) + " процентов от общей суммы клиент заплатит за всё время."
  console.log(cmp_res);

  let valuepy = credit_value*(1+percent/100)-credit_value + " - сумма которая начислится за первый год"; // 8 процентов заплатит клиент за один год value per year
  console.log(valuepy);

  let total_value = Math.round(credit_value*cmp_inst) + " - сумма которую клиент выплатит за всё время."; 
  console.log(total_value);

  let bank_earn = Math.round(credit_value*cmp_inst-credit_value) + " - сумма которую клиент отдаст за кредит.";
  console.log(bank_earn);
  }
credit(8, 4000, 3);
/*
let percent = 8; // процентов годовых
let credit_value = 4000; 
let credit_time = 3;
*/

// 2.1 Строка в обратном порядке
let reverce = function(str){
  let strback = "";
  for (let i = str.length-1; i>=0 ; i--){
    strback += (str[i]);
  }  
  console.log(strback);
}
reverce("Hello");



//2.2 факториал числа
let factorial = function(value){
  let res = 1;
  for (let i = 1; i<=value; i++){
    res *= i;
  }
  console.log(res);
}
factorial(6);



//2.3 Дано число - вывести первые N делителей этого числа нацело.
let divider = function(value){
  for (let i = 1; i<value; i++){
    if (value % i === 0){
      console.log(i);
    }
  }
}
divider(50);


//2.4 Найти сумму цифр числа которые кратны двум
let sum = function(value){
  let res = 0;
  for (i = 0; i<=value; i++){
    if (i % 2 === 0){
      res += i;
    }
  }
  console.log(res);
}
sum(10);



//2.5 Найти минимальное число которое больше 300 и нацело делиться на 17
let something = function(){
  for (let i = 300; true; i++){
    if (i % 17 === 0){
      console.log(i);
      break;
    }
  }
}
something();


//2.6 Заданы две переменные для двух целых чисел, найти максимальное общее значение которое нацело делит два заданных числа.
let grcmnfctr = function(firstv, secondv){ //grcmnfctr - greatest common factor, НОД
  if (firstv > secondv){
      for (j = secondv; j>0; j--){
        if (firstv % j === 0 && secondv % j === 0){
          console.log(j);
          break;
      }
    }
  }
  else {
    for (j = firstv; j>0; j--){
      if (firstv % j === 0 && secondv % j === 0){
        console.log(j);
        break;
      }
    }
  }
}
grcmnfctr(762, 492);



//3.1 Выполнено



//3.3 Написать функцию, которая транспонирует матрицу
let MatrixTranspose = function(array, totallength){
  let reverce = [];
  for (let i = 0; i<totallength; i++){
    reverce.push([]);
  }
  for (let b = 0; b<totallength; b++){
    for (let j = 0; j<totallength; j++){
      reverce[j].push(array[b][j]);
    }
  }
  console.log(reverce);
}
MatrixTranspose([[1,2,3],[1,2,3],[1,2,3]], 3);


//3.4 Написать функцию, которая суммирует две матрицы
let MatrixSum = function(array, sarray, totallength){
  for (let b = 0; b<totallength; b++){
    for (let j = 0; j<totallength; j++){
      array[b][j] += sarray[b][j];
    }
  }
  console.log(array);
}
MatrixSum([[3,2,3],[6,2,6],[1,2,3]], [[3,4,3],[1,2,3],[7,2,3]], 3);

 
//3.5 Найти номер столбца двумерного массива сумма которого является максимальной (аналогично для строки)
let MatrixStr = function(array, totallength){
    let number;
    let res = 0;
    for (let b = 0; b<totallength; b++){
      let sum = 0;
        for (let j = 0; j<totallength; j++){
          sum += array[b][j];
          if (res < sum){
            res = sum;
            number = b;
        }
      }
    }
    console.log(number);
  }
  MatrixStr([[8,8,8],[7,9,9],[33,2,3]], 3);

  let MatrixStolbec = function(array, totallength){
    let number;
    let res = 0;
    for (let b = 0; b<totallength; b++){
      let sum = 0;
        for (let j = 0; j<totallength; j++){
          sum += array[j][b];
          if (res < sum){
            res = sum;
            number = b;
        }
      }
    }
    console.log(number);
  }
  MatrixStolbec([[8,3,8],[7,9,9],[3,2,7]], 3);

//3.6 Удалить из массива все столбцы которые не имеют ни одного нулевого элемента и сумма которых положительна - оформить в виде функции

  let MatrixDeleteStolbec = function(array, totallength){
    let counter = 0;
    for (let b = 0; b<totallength;){
      let sum = 0;
      let zeroFactor = false;
      let deleteFactor = false;
        for (let j = 0; j<totallength; j++){
          sum += array[j][b];
          console.log(sum);
          if (array[j][b] === 0){
              zeroFactor = true;
          }
          if ( j === totallength-1 ){
              if ((sum > 0 && zeroFactor === false)){
                  deleteFactor = true;
              }
          }
        }
        if (deleteFactor === true){
            for (let c = 0; c<totallength; c++){
                array[c].splice(b, 1); 
            }
            counter+=1;
        }
        else if(deleteFactor === false){
            b++;
            counter+=1;
        }
        if (counter === totallength){
            break;
        }
    }
    console.log(array);
};
MatrixDeleteStolbec([[-5,3,8],[7,9,5],[3,2,0]], 3);

//4.1 Написать функцию которая генерирует массив случайных значений, таким образом что все элементы результирующего массива являются уникальными. 
Генерациями происходит в рамках чисел от N до M, где N,M - могут быть как положительные так и отрицательными, 
и еще одним параметром количество значений которые нужно сгенерировать. 
Если количество генерируемых значений больше чем чисел в диапазоне - отдавать пустой массив.

let  ArrayGeneration = function(N, M, arraylength){
let array = [],
    min = Math.abs(N),
    max = Math.abs(M);
  if (arraylength > min + max){
    console.log(array);
  }
  else {
    for (i = N, j=0; j<arraylength; j++, N++){
      if (N < M){
      array.push(N);
      }
    }
  let currentIndex = array.length, 
      tValue, 
      randomIndex;
    for (; 0 !== currentIndex; ){
      randomIndex = Math.floor(Math.random() * currentIndex);
      --currentIndex;

      tValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = tValue;
    }
  console.log(array);
  }
}
ArrayGeneration(-50, 100, 150); // N - мин значение, M - макс. значение, arraylength - количество значений.


//4.2 Использовать функцию из предыдущего задания чтобы получить массив из нужного количества значений. 
Найти процентное соотношение отрицательных, положительных и нулевых элементов массива.

let  ArrayGeneration = function(N, M, arraylength){
let array = [],
    min = Math.abs(N),
    max = Math.abs(M);
  if (arraylength > min + max){
    console.log(array);
  }
  else {
    for (i = N, j=0; j<arraylength; j++, N++){
      if (N < M){
      array.push(N);
      }
    }
  let currentIndex = array.length, 
      tValue, 
      randomIndex;
    for (; 0 !== currentIndex; ){
      randomIndex = Math.floor(Math.random() * currentIndex);
      --currentIndex;

      tValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = tValue;
    }
  //console.log(array);
  }
  console.log(array);
  return array;
}
percentarr = ArrayGeneration(-135, 15, 150);// N - мин значение, M - макс. значение, arraylength - количество значений.
percent = function(array){
    let bzValue = 0,
        zValue = 0,
        azValue = 0;
    for (i = 0; i<array.length; i++){
      if (array[i] < 0){
        bzValue += 1;
      }
      else if (array[i] === 0){
        zValue += 1;
      }
      else if (array[i] > 0){
        azValue += 1;
      }     
    }
    bzValue = bzValue/array.length * 100;
    console.log(bzValue + "% отрицательных значений");
    
    zValue = zValue/array.length * 100;
    console.log(zValue + "% нулевых значений");
    
    azValue = 100 - zValue - bzValue;
    console.log(azValue + "% положительных значений");
}
percent(percentarr);

//4.3




//4.4 Задано предложение - подсчитать количество вхождений каждого слова в предложении. 
Вывести список уникальных слов и напротив каждого слова - сколько раз встретилось

words = function(str){
  let wordCount = str.match(/(\w+)/g).length
  space = " ";
  let result = {};
  sArray = str.split(space);
  for (let i = 0; i<sArray.length; i++){
    let a = sArray[i];
      if (result[a] != undefined){
        ++result[a];
      }
      else {
        result[a] = 1;
      }
    }
    for (let key in result){
      console.log(key, result[key]);
    }
}
words("lal lal lal lal on alon on lal lal");

//4.5 Написать рекурсивную функцию которая выводит абсолютно все элементы ассоциативного массива (объекта) - любого уровня вложенности

let recurse = function(obj){
  for (let key in obj){
    console.log(key, obj[key]);
    if (obj[key] != undefined) {
      recurse(obj[key]);
    }
  }
  
}
recurse({
  value : 3,
  next: {
    value1: 5,
    next1: {
      value2: 7,
      next2: {
        value3: 8
      }
    }
  }
})

//5.1 Задан двумерный массив - объединить каждый внутренний массив с верхнем массивом - только по уникальным значениям. 

let concat = function(array){
  jArray = [];
  for (i = 0; i < array.length; i++){
    if (array[i][0] != undefined){
      console.log(array[i]);
      jArray = jArray.concat(array[i]);
    }
    else {
      jArray.push(array[i]);
    }
    
  }
  console.log(jArray);
}

concat([[14,5], [2,4,6], 4, [5,67], 1, [969, 6, 7]]);

//5.2 Написать функцию которая возвращает true/false в зависимости от того - все ли уникальные значения в массиве или есть не уникальные.

unic = function(array){
  sArray = array;
  result = {};
  for (let i = 0; i<sArray.length; i++){
    let a = sArray[i];
      if (result[a] != undefined){
        ++result[a];
      }
      else {
        result[a] = 1;
      }
    }
    let unic = true;
    for (let key in result){
      if (result[key] > 1){
        unic = false;
      }
    }
    console.log(unic);
}
unic([1,4,6,2,3,1,7]);


//5.3 Написать функцию которая возвращает: среднюю оценку студентов в разрезе каждого курса: 
{1: 3.2, 2: 3.5, 3: 4.5, 4: 3, 5: 4.5} с учетом только тех студентов которые активны. 
Посчитать количество неактивных студентов в разрезе каждого курса и общее количество неактивных студентов.

unic = function(array){
  result = {};
  notActiveCounter = 0;
  for (let i = 0; i<array.length; i++){
    let rdon = array[i]; // reduction - сокращение
    if (result[rdon.course] === undefined){
    result[rdon.course] = {
      counter: 0,
      sumEstimate: 0,
      notActiveCounter: 0,
    };
    }
    result[rdon.course].counter++;
    result[rdon.course].sumEstimate += rdon.esimate;
    if (rdon.active == false){
      notActiveCounter++;
      result[rdon.course].notActiveCounter++;
    }
  }
  for (let key in result){
    let avgEstimate = result[key].sumEstimate/result[key].counter;
    console.log(key + " курс имеет среднюю оценку " + avgEstimate.toFixed(1) + " и " + result[key].notActiveCounter + " неактивных студентов");
  }
  console.log("общее количество неактивных студентов " + notActiveCounter);
       
}
unic([{name: "Olya", course: 2, esimate: 2, active: true},
  {name: "Ivan", course: 1, esimate: 5, active: false},
  {name: "Alex", course: 3, esimate: 5, active: false},
  {name: "Kolya", course: 1, esimate: 4, active: true},
  {name: "Misha", course: 1, esimate: 5, active: false},
  {name: "Kostya", course: 4, esimate: 5, active: true},
  {name: "Masha", course: 2, esimate: 4, active: true},
  {name: "Inna", course: 3, esimate: 4, active: false},
  {name: "Olya", course: 2, esimate: 4, active: true},
  {name: "Liza", course: 3, esimate: 4, active: true},
  {name: "Katya", course: 4, esimate: 4, active: false},
  {name: "Sonya", course: 3, esimate: 4, active: true}]);



//6.1 Посчитать количество ссылок на странице, вывести их содержимое

function <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Title</title>
    <script src="index.js"></script>
</head>

<body>
    <a href="First link"></a> 
    <a href="Second link"></a>
    <a href="Third link"></a>
    <a href="Fourth link"></a>
    <a href="Fifth link"></a>
     
    <input type="text" id="B" name="a" /> <br /> <br /> 
    <input type="button" value="Число гиперссылок" OnClick="a(); b();"> 
    
    <script>function a(){ 
        document.getElementById("B").value = document.getElementsByTagName('a').length + " - число ссылок";
        } 
      function b(){
        length = document.getElementsByTagName('a').length;
        let href = document.getElementsByTagName('a');
        for (i = 0; i<length; i++){
          javascript:alert(href[i].href);
        } 
      }</script>
   
</body>
</html>


//6.2 Посчитать количество тегов “p” на странице которые имеют класс “phrase” - вывести их содержимое

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Title</title>
    <script src="index.js"></script>
</head>

<body>
    <a href="First link"></a> 
    <a href="Second link"></a>
    <a href="Third link"></a>
    <a href="Fourth link"></a>
    <a href="Fifth link"></a>
    <p class = phrase>lalalalalalala</p>
    <p></p>
    <p class = "phrase">lololololo</p>
     
    <input type="text" id="B" name="a" /> <br /> <br /> 
    <input type="button" value="объектов с тэгом p" OnClick="a(); b();"> 
    
    <script>function a(){ 
 
        document.getElementById("B").value = document.querySelectorAll("p.phrase").length;
        } 
      function b(){
        limit = document.querySelectorAll("p.phrase").length;
        output = document.querySelectorAll("p.phrase");
        for (i = 0; i<limit; i++){
          alert(output[i].outerHTML);
        } 
      }</script>
   
</body>
</html> 
